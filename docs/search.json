[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "大数据",
    "section": "",
    "text": "推荐\n\ndata.table, dtplyr,dbplyr\nrcpp\narrow\nspark\nploars",
    "crumbs": [
      "推荐"
    ]
  },
  {
    "objectID": "index.html#推荐",
    "href": "index.html#推荐",
    "title": "大数据",
    "section": "",
    "text": "data.table, dtplyr,dbplyr\nrcpp\narrow\nspark\nploars",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>推荐</span>"
    ]
  },
  {
    "objectID": "data.table.html",
    "href": "data.table.html",
    "title": "\n2  data.table\n",
    "section": "",
    "text": "2.1 dtplyr 语法\nDTPLYR 使用 DPLYR 的语法s实现 data.table 的速度；编写 DPLYR（和 TidyR）代码，DTPLYR 将其转换为等效的 Data.Table。\nShow the codemtcars2 &lt;- lazy_dt(mtcars)\nShow the codedtplyr &lt;- mtcars2 %&gt;% \n  filter(wt &lt; 5) %&gt;% \n  mutate(l100k = 235.21 / mpg) %&gt;% # liters / 100 km\n  group_by(cyl) %&gt;% \n  summarise(l100k = mean(l100k))\ndtplyr\n#&gt; Source: local data table [3 x 2]\n#&gt; Call:   `_DT1`[wt &lt; 5][, `:=`(l100k = 235.21/mpg)][, .(l100k = mean(l100k)), \n#&gt;     keyby = .(cyl)]\n#&gt; \n#&gt;     cyl l100k\n#&gt;   &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1     4  9.05\n#&gt; 2     6 12.0 \n#&gt; 3     8 14.9 \n#&gt; \n#&gt; # Use as.data.table()/as.data.frame()/as_tibble() to access results\n\ndtplyr %&gt;% show_query()\n#&gt; `_DT1`[wt &lt; 5][, `:=`(l100k = 235.21/mpg)][, .(l100k = mean(l100k)), \n#&gt;     keyby = .(cyl)]\n\ndtplyr %&gt;% as_tibble()\n#&gt; # A tibble: 3 × 2\n#&gt;     cyl l100k\n#&gt;   &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1     4  9.05\n#&gt; 2     6 12.0 \n#&gt; 3     8 14.9\nShow the codedt &lt;- data.table::as.data.table(mtcars)\ndt[wt&lt;5][, `:=`(l100k = 235.21/mpg)][, .(l100k = mean(l100k)), keyby = .(cyl)]\n#&gt; Key: &lt;cyl&gt;\n#&gt;      cyl     l100k\n#&gt;    &lt;num&gt;     &lt;num&gt;\n#&gt; 1:     4  9.048898\n#&gt; 2:     6 11.970180\n#&gt; 3:     8 14.871885",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>`data.table`</span>"
    ]
  },
  {
    "objectID": "data.table.html#data.table-语法",
    "href": "data.table.html#data.table-语法",
    "title": "\n2  data.table\n",
    "section": "\n2.2 data.table 语法",
    "text": "2.2 data.table 语法\nDT[i, j, by]\n\n##   R:                 i                 j        by\n## SQL:  where | order by   select | update  group by\n\n\n\n\nhttps://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>`data.table`</span>"
    ]
  },
  {
    "objectID": "arrow.html",
    "href": "arrow.html",
    "title": "\n3  Arrow\n",
    "section": "",
    "text": "3.1 安装\napache-arrow.tar.gz\nread_parquet()：读取 Parquet 格式的文件\nread_delim_arrow()：读取带分隔符的文本文件\nread_csv_arrow()：读取逗号分隔值 （CSV） 文件\nread_tsv_arrow()：读取制表符分隔值 （TSV） 文件",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Arrow</span>"
    ]
  },
  {
    "objectID": "polars.html",
    "href": "polars.html",
    "title": "\n4  Polars\n",
    "section": "",
    "text": "4.1 polars\nShow the codeif(!require(polars))\n    install.packages(\"polars\", repos = \"https://rpolars.r-universe.dev\")\n\npolars_info()\n#&gt; Polars R package version : 0.20.0\n#&gt; Rust Polars crate version: 0.43.1\n#&gt; \n#&gt; Thread pool size: 18 \n#&gt; \n#&gt; Features:                               \n#&gt; default                    TRUE\n#&gt; full_features              TRUE\n#&gt; disable_limit_max_threads  TRUE\n#&gt; nightly                    TRUE\n#&gt; sql                        TRUE\n#&gt; rpolars_debug_print       FALSE\n#&gt; \n#&gt; Code completion: deactivated\npolars_code_completion_activate()\nPolars 的主要函数存储在 “pl” 命名空间中，可以使用 “pl$” 前缀进行访问，以防止与其他组件和base R 函数名称冲突\nShow the codeiris_polars &lt;- pl$DataFrame(iris)\niris_polars\n#&gt; shape: (150, 5)\n#&gt; ┌──────────────┬─────────────┬──────────────┬─────────────┬───────────┐\n#&gt; │ Sepal.Length ┆ Sepal.Width ┆ Petal.Length ┆ Petal.Width ┆ Species   │\n#&gt; │ ---          ┆ ---         ┆ ---          ┆ ---         ┆ ---       │\n#&gt; │ f64          ┆ f64         ┆ f64          ┆ f64         ┆ cat       │\n#&gt; ╞══════════════╪═════════════╪══════════════╪═════════════╪═══════════╡\n#&gt; │ 5.1          ┆ 3.5         ┆ 1.4          ┆ 0.2         ┆ setosa    │\n#&gt; │ 4.9          ┆ 3.0         ┆ 1.4          ┆ 0.2         ┆ setosa    │\n#&gt; │ 4.7          ┆ 3.2         ┆ 1.3          ┆ 0.2         ┆ setosa    │\n#&gt; │ 4.6          ┆ 3.1         ┆ 1.5          ┆ 0.2         ┆ setosa    │\n#&gt; │ 5.0          ┆ 3.6         ┆ 1.4          ┆ 0.2         ┆ setosa    │\n#&gt; │ …            ┆ …           ┆ …            ┆ …           ┆ …         │\n#&gt; │ 6.7          ┆ 3.0         ┆ 5.2          ┆ 2.3         ┆ virginica │\n#&gt; │ 6.3          ┆ 2.5         ┆ 5.0          ┆ 1.9         ┆ virginica │\n#&gt; │ 6.5          ┆ 3.0         ┆ 5.2          ┆ 2.0         ┆ virginica │\n#&gt; │ 6.2          ┆ 3.4         ┆ 5.4          ┆ 2.3         ┆ virginica │\n#&gt; │ 5.9          ┆ 3.0         ┆ 5.1          ┆ 1.8         ┆ virginica │\n#&gt; └──────────────┴─────────────┴──────────────┴─────────────┴───────────┘\n访问属性\nShow the codeiris_polars$shape\n#&gt; [1] 150   5\niris_polars$height\n#&gt; [1] 150\niris_polars$width\n#&gt; [1] 5\n\n# polars syntax\npl$DataFrame(iris)$\n  select(c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\"))$\n  with_columns(\n    pl$when(\n      (pl$col(\"Petal.Length\") / pl$col(\"Petal.Width\") &gt; 3)\n    )$then(pl$lit(\"long\"))$\n      otherwise(pl$lit(\"large\"))$\n      alias(\"petal_type\")\n  )$\n  filter(pl$col(\"Sepal.Length\")$is_between(4.5, 5.5))$\n  head(6)\n#&gt; shape: (6, 5)\n#&gt; ┌──────────────┬─────────────┬──────────────┬─────────────┬────────────┐\n#&gt; │ Sepal.Length ┆ Sepal.Width ┆ Petal.Length ┆ Petal.Width ┆ petal_type │\n#&gt; │ ---          ┆ ---         ┆ ---          ┆ ---         ┆ ---        │\n#&gt; │ f64          ┆ f64         ┆ f64          ┆ f64         ┆ str        │\n#&gt; ╞══════════════╪═════════════╪══════════════╪═════════════╪════════════╡\n#&gt; │ 5.1          ┆ 3.5         ┆ 1.4          ┆ 0.2         ┆ long       │\n#&gt; │ 4.9          ┆ 3.0         ┆ 1.4          ┆ 0.2         ┆ long       │\n#&gt; │ 4.7          ┆ 3.2         ┆ 1.3          ┆ 0.2         ┆ long       │\n#&gt; │ 4.6          ┆ 3.1         ┆ 1.5          ┆ 0.2         ┆ long       │\n#&gt; │ 5.0          ┆ 3.6         ┆ 1.4          ┆ 0.2         ┆ long       │\n#&gt; │ 5.4          ┆ 3.9         ┆ 1.7          ┆ 0.4         ┆ long       │\n#&gt; └──────────────┴─────────────┴──────────────┴─────────────┴────────────┘\nShow the codepl$read_csv(\"data/Advertising.csv\")\n#&gt; shape: (200, 5)\n#&gt; ┌─────┬───────┬───────┬───────────┬───────┐\n#&gt; │     ┆ TV    ┆ radio ┆ newspaper ┆ sales │\n#&gt; │ --- ┆ ---   ┆ ---   ┆ ---       ┆ ---   │\n#&gt; │ i64 ┆ f64   ┆ f64   ┆ f64       ┆ f64   │\n#&gt; ╞═════╪═══════╪═══════╪═══════════╪═══════╡\n#&gt; │ 1   ┆ 230.1 ┆ 37.8  ┆ 69.2      ┆ 22.1  │\n#&gt; │ 2   ┆ 44.5  ┆ 39.3  ┆ 45.1      ┆ 10.4  │\n#&gt; │ 3   ┆ 17.2  ┆ 45.9  ┆ 69.3      ┆ 9.3   │\n#&gt; │ 4   ┆ 151.5 ┆ 41.3  ┆ 58.5      ┆ 18.5  │\n#&gt; │ 5   ┆ 180.8 ┆ 10.8  ┆ 58.4      ┆ 12.9  │\n#&gt; │ …   ┆ …     ┆ …     ┆ …         ┆ …     │\n#&gt; │ 196 ┆ 38.2  ┆ 3.7   ┆ 13.8      ┆ 7.6   │\n#&gt; │ 197 ┆ 94.2  ┆ 4.9   ┆ 8.1       ┆ 9.7   │\n#&gt; │ 198 ┆ 177.0 ┆ 9.3   ┆ 6.4       ┆ 12.8  │\n#&gt; │ 199 ┆ 283.6 ┆ 42.0  ┆ 66.2      ┆ 25.5  │\n#&gt; │ 200 ┆ 232.1 ┆ 8.6   ┆ 8.7       ┆ 13.4  │\n#&gt; └─────┴───────┴───────┴───────────┴───────┘",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Polars</span>"
    ]
  },
  {
    "objectID": "polars.html#polars",
    "href": "polars.html#polars",
    "title": "\n4  Polars\n",
    "section": "",
    "text": "R polars\nCookbook Polars for R",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Polars</span>"
    ]
  },
  {
    "objectID": "polars.html#tidypolars",
    "href": "polars.html#tidypolars",
    "title": "\n4  Polars\n",
    "section": "\n4.2 tidypolars\n",
    "text": "4.2 tidypolars\n\n\nShow the codeif(!require(tidypolars))\n    install.packages('tidypolars',\n                     repos = c('https://etiennebacher.r-universe.dev', getOption(\"repos\"))\n    )\n\niris |&gt; \n  as_polars_df() |&gt; \n  select(starts_with(c(\"Sep\", \"Pet\"))) |&gt; \n  mutate(\n    petal_type = ifelse((Petal.Length / Petal.Width) &gt; 3, \"long\", \"large\")\n  ) |&gt; \n  filter(between(Sepal.Length, 4.5, 5.5)) |&gt; \n  head()\n#&gt; shape: (6, 5)\n#&gt; ┌──────────────┬─────────────┬──────────────┬─────────────┬────────────┐\n#&gt; │ Sepal.Length ┆ Sepal.Width ┆ Petal.Length ┆ Petal.Width ┆ petal_type │\n#&gt; │ ---          ┆ ---         ┆ ---          ┆ ---         ┆ ---        │\n#&gt; │ f64          ┆ f64         ┆ f64          ┆ f64         ┆ str        │\n#&gt; ╞══════════════╪═════════════╪══════════════╪═════════════╪════════════╡\n#&gt; │ 5.1          ┆ 3.5         ┆ 1.4          ┆ 0.2         ┆ long       │\n#&gt; │ 4.9          ┆ 3.0         ┆ 1.4          ┆ 0.2         ┆ long       │\n#&gt; │ 4.7          ┆ 3.2         ┆ 1.3          ┆ 0.2         ┆ long       │\n#&gt; │ 4.6          ┆ 3.1         ┆ 1.5          ┆ 0.2         ┆ long       │\n#&gt; │ 5.0          ┆ 3.6         ┆ 1.4          ┆ 0.2         ┆ long       │\n#&gt; │ 5.4          ┆ 3.9         ┆ 1.7          ┆ 0.4         ┆ long       │\n#&gt; └──────────────┴─────────────┴──────────────┴─────────────┴────────────┘",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Polars</span>"
    ]
  },
  {
    "objectID": "parallel_computing.html",
    "href": "parallel_computing.html",
    "title": "\n5  并行计算\n",
    "section": "",
    "text": "5.1 硬件\nParallel computing\nShow the codeif(!require(benchmarkme)) install.packages(\"benchmarkme\")\n1字节（byte）= 8位（bit） 二进制数 = 1个 ASCII 字符。\nInternational System of Units (SI)\nShow the code# 随机存取存储器 Random access memory,RAM\nget_ram()\n#&gt; 33.9 GB\n\n\n# CPU\nget_cpu()\n#&gt; $vendor_id\n#&gt; [1] \"GenuineIntel\"\n#&gt; \n#&gt; $model_name\n#&gt; [1] \"Intel(R) Core(TM) Ultra 5 125H\"\n#&gt; \n#&gt; $no_of_cores\n#&gt; [1] 18\nstandard hard disk drives (HDDs)\nSolid state drives (SSDs)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>并行计算</span>"
    ]
  },
  {
    "objectID": "parallel_computing.html#并行计算",
    "href": "parallel_computing.html#并行计算",
    "title": "\n5  并行计算\n",
    "section": "\n5.2 并行计算",
    "text": "5.2 并行计算\n\n\n\n\nCluster\nMaster\nWorker\nJob -&gt; (Spilt) -&gt; task 1,…,n, -&gt; (feed) -&gt; R worker\nhttps://www.futureverse.org/\n\n5.2.1 furrr 包\n\n5.2.2 future.apply 包\n\n5.2.3 BiocParallel 包",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>并行计算</span>"
    ]
  },
  {
    "objectID": "spark.html",
    "href": "spark.html",
    "title": "\n6  Spark\n",
    "section": "",
    "text": "6.1 安装\nhttps://spark.posit.co/\nApache Spark 是用于大规模数据处理的统一分析引擎。\nSpark 提供了一组超出 MapReduce 的更丰富的动词，以方便优化在多台计算机中运行的代码。Spark 还将数据加载到内存中，使操作速度比 Hadoop 的磁盘存储快得多。",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Spark</span>"
    ]
  },
  {
    "objectID": "spark.html#安装",
    "href": "spark.html#安装",
    "title": "\n6  Spark\n",
    "section": "",
    "text": "6.1.1 java 8\nhttps://java.com/download\n\nShow the codesystem(command = \"E:/java/bin/java.exe -version\",intern = T) %&gt;% cat(.,sep = \"\\n\")\n\n\n# 在 R 中临时设置 JAVA_HOME 环境变量\n# Sys.setenv(JAVA_HOME = \"E:/java\")\n\n\n\n6.1.2 sparklyr\n\nShow the code#install.packages(\"sparklyr\")\npackageVersion(\"sparklyr\")\n\n\n\n6.1.3 spark\n\nShow the codelibrary(sparklyr)\n# C:\\\\Users\\\\DELL\\\\AppData\\\\Local/spark\noptions(spark.install.dir = \"E:/spark/\")\nspark_install_dir()\n# spark_available_versions()\n\n#spark_install(version = \"3.3\")\nspark_installed_versions()\n\n\n# spark_uninstall(version = \"1.6.3\", hadoop = \"2.6\")",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Spark</span>"
    ]
  },
  {
    "objectID": "spark.html#连接",
    "href": "spark.html#连接",
    "title": "\n6  Spark\n",
    "section": "\n6.2 连接",
    "text": "6.2 连接\n\nShow the codelibrary(sparklyr)\nsc &lt;- spark_connect(master = \"local\")",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Spark</span>"
    ]
  },
  {
    "objectID": "spark.html#使用",
    "href": "spark.html#使用",
    "title": "\n6  Spark\n",
    "section": "\n6.3 使用",
    "text": "6.3 使用\n\nShow the codecars &lt;- copy_to(sc, mtcars)\n\ncars\n\n\n\nShow the codelibrary(dplyr)\nselect(cars, hp, mpg) %&gt;%\n  sample_n(100) %&gt;%\n  collect() %&gt;%\n  plot()\n\n\n\nShow the codemodel &lt;- ml_linear_regression(cars, mpg ~ hp)\nmodel\n\nmodel %&gt;%\n  ml_predict(copy_to(sc, data.frame(hp = 250 + 10 * 1:10))) %&gt;%\n  transmute(hp = hp, mpg = prediction) %&gt;%\n  full_join(select(cars, hp, mpg)) %&gt;%\n  collect() %&gt;%\n  plot()\n\n\n\nShow the codespark_write_csv(cars, \"data/spark/cars.csv\")\n\ncars &lt;- spark_read_csv(sc, \"data/spark/cars.csv\")\n\n\n\n6.3.1 分布式\n\nShow the codecars %&gt;% spark_apply(~round(.x))\n\n\n\n6.3.2 流\n\nShow the codedir.create(\"data/spark/input\")\ndir.create(\"data/spark/output\")\nwrite.csv(mtcars, \"data/spark/input/cars_1.csv\", row.names = F)\n\n\nstream &lt;-stream_read_csv(sc, \"data/spark/input/\") %&gt;%\n    select(mpg, cyl, disp) %&gt;% \n    stream_write_csv(\"data/spark/output/\")\n\ndir(\"data/spark/output\", pattern = \".csv\")\n\n\nwrite.csv(mtcars, \"data/spark/input/cars_2.csv\", row.names = F)\n\n# 几秒钟后\ndir(\"data/spark/output\", pattern = \".csv\")\n\n\nstream_stop(stream)\n\nfile.remove(\"data/spark/input\")\nfile.remove(\"data/spark/output\")",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Spark</span>"
    ]
  },
  {
    "objectID": "spark.html#web-界面",
    "href": "spark.html#web-界面",
    "title": "\n6  Spark\n",
    "section": "\n6.4 Web 界面",
    "text": "6.4 Web 界面\n\nShow the codespark_web(sc)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Spark</span>"
    ]
  },
  {
    "objectID": "spark.html#断开连接",
    "href": "spark.html#断开连接",
    "title": "\n6  Spark\n",
    "section": "\n6.5 断开连接",
    "text": "6.5 断开连接\n\nShow the codespark_disconnect(sc)\nspark_disconnect_all()",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Spark</span>"
    ]
  },
  {
    "objectID": "Rcpp.html",
    "href": "Rcpp.html",
    "title": "\n7  Rcpp\n",
    "section": "",
    "text": "7.1 数据结构\nRcpp\nRcpp4everyone\nhttps://dirk.eddelbuettel.com/papers/useR2019_rcpp_tutorial.pdf\nhttps://www.runoob.com/cplusplus/cpp-tutorial.html",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Rcpp</span>"
    ]
  },
  {
    "objectID": "Rcpp.html#数据结构",
    "href": "Rcpp.html#数据结构",
    "title": "\n7  Rcpp\n",
    "section": "",
    "text": "7.1.1 向量类\nNumericVector IntegerVector CharacterVector LogicalVector\n\nShow the codelibrary(Rcpp)\nsourceCpp(\"function/sum_cpp.cpp\")\n#&gt; \n#&gt; &gt; sum_cpp(c(1, 2, 3))\n#&gt; [1] 6\n\nsum_cpp(mpg$displ)\n#&gt; [1] 812.4\nsum(mpg$displ)\n#&gt; [1] 812.4\n\nsourceCpp(\"function/mean_cpp.cpp\")\n#&gt; \n#&gt; &gt; x = c(1, 2, 3, 4, 5)\n#&gt; \n#&gt; &gt; mean_cpp(x)\n#&gt; [1] 3\nmean_cpp(mpg$displ)\n#&gt; [1] 3.471795\n\n\nNumericMatrix IntegerMatrix CharacterMatrix LogicalMatrix\n\n7.1.2 数据框类\nDataFrame\n\n7.1.3 列表类\nList\n\nShow the code# 平均百分比误差\nsourceCpp(\"function/mpe.cpp\")\n#&gt; \n#&gt; &gt; model &lt;- lm(mpg ~ wt, data = mtcars)\n#&gt; \n#&gt; &gt; mpe(model)\n#&gt; [1] -0.01541615\nmod &lt;- lm(mpg ~ wt, data = mtcars)\nmpe(mod)\n#&gt; [1] -0.01541615\n\n\n\n7.1.4 函数类\n\nShow the codecppFunction(\"RObject callWithOne(Function f) {\n  return f(1);\n}\")\n\ncallWithOne(function(x) x + 1)\n#&gt; [1] 2\ncallWithOne(paste)\n#&gt; [1] \"1\"\n\n\n\n7.1.5 属性\n\nShow the codecppFunction('NumericVector attribs() {\n  NumericVector out = NumericVector::create(1, 2, 3);\n\n  out.names() = CharacterVector::create(\"a\", \"b\", \"c\");\n  out.attr(\"my-attr\") = \"my-value\";\n  out.attr(\"class\") = \"my-class\";\n\n  return out;\n}')\n\n\nattribs()\n#&gt; a b c \n#&gt; 1 2 3 \n#&gt; attr(,\"my-attr\")\n#&gt; [1] \"my-value\"\n#&gt; attr(,\"class\")\n#&gt; [1] \"my-class\"",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Rcpp</span>"
    ]
  },
  {
    "objectID": "Rcpp.html#rcpp-sugar",
    "href": "Rcpp.html#rcpp-sugar",
    "title": "\n7  Rcpp\n",
    "section": "\n7.2 Rcpp sugar",
    "text": "7.2 Rcpp sugar",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Rcpp</span>"
    ]
  },
  {
    "objectID": "Python_to_R.html",
    "href": "Python_to_R.html",
    "title": "\n7  Python to R\n",
    "section": "",
    "text": "7.1 对象转换",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Python to R</span>"
    ]
  },
  {
    "objectID": "Python_to_R.html#对象转换",
    "href": "Python_to_R.html#对象转换",
    "title": "\n7  Python to R\n",
    "section": "",
    "text": "Type conversions\n\n\n\n\n\n\nR\nPython\n例\n\n\n\n单元素向量\n标量Scalar\n\n1、 1L、TRUE、\"foo\"\n\n\n\n未命名列表或多元素向量\nList\n\nc(1.0, 2.0, 3.0), c(1L, 2L, 3L)\n\n\n\n命名列表\nDict\n\nlist(a = 1L, b = 2.0), dict(x = x_data)\n\n\n\nMatrix/Array\nNumPy ndarray\nmatrix(c(1,2,3,4), nrow = 2, ncol = 2)\n\n\nData Frame\nPandas DataFrame\ndata.frame(x = c(1,2,3), y = c(\"a\", \"b\", \"c\"))\n\n\nFunction\nPython function\nfunction(x) x + 1\n\n\nNULL, TRUE, FALSE\nNone, True, False\n\nNULL, TRUE, ALSE",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Python to R</span>"
    ]
  },
  {
    "objectID": "Python_to_R.html#reticulate",
    "href": "Python_to_R.html#reticulate",
    "title": "\n7  Python to R\n",
    "section": "\n7.2 reticulate::\n",
    "text": "7.2 reticulate::\n\n\nShow the code#&gt; \"R code\"\n\n\n\nShow the code###&gt; \"python code\"\n\n\n\n7.2.1 R 安装 python 模块\n\nreticulate：安装Python module\n\nShow the codelibrary(reticulate)\npy_config()\npy_module_available('pip')\n\n#  Anaconda 激活环境   pip install scanpy -i https://pypi.tuna.tsinghua.edu.cn/simple/  ，依赖包含 numpy pandas\npy_module_available('numpy')\npy_module_available('pandas')\npy_module_available('scanpy')\nreticulate::repl_python()\n\n\n\n7.2.2 R 调用 Python 模块\n\nShow the code# 调用os模块(module)的listdir()函数\nos &lt;- reticulate::import(\"os\")\nos$listdir(\"./\")\n\n# 调用seaborn模块的load_dataset()函数\n# 需要seaborn模块已安装\nsns &lt;- import(\"seaborn\")\ntips &lt;- sns$load_dataset(\"tips\")\nprint(head(tips))\n\n\n\n7.2.3 R → Python\n\nShow the codeA &lt;- 1\nB &lt;- c(1, 2, 3)\nC &lt;- c(a = 1, b = 2, c = 3)\nD &lt;- matrix(1:4, nrow = 2)\nE &lt;- data.frame(a = c(1, 2), b = c(3, 4))\nG &lt;- list(1, 2, 3)\nH &lt;- list(c(1, 2), c(3, 4))\nI &lt;- list(a = c(1, 2), b = c(3, 4))\nJ &lt;- function(a, b) {\n  return(a + b)\n  }\nK1 &lt;- NULL\nK2 &lt;- T\nK3 &lt;- F\n\n\n\nShow the code### float\nr.A\ntype(r.A)\n\n### list\nr.B\ntype(r.B)\n\nr.C\ntype(r.C)\n\n### numpy.ndarray\nr.D\ntype(r.D)\n\n### pandas.core.frame.DataFrame\nr.E\ntype(r.E)\n\n### list\nr.G\ntype(r.G)\n\nr.H\ntype(r.H)\n\n### dict\nr.I\ntype(r.I)\n\n### function\nr.J\ntype(r.J)\nr.J(2, 3)\n\n\n### NoneType\nr.K1\ntype(r.K1)\n\n\n### bool\nr.K2\ntype(r.K2)\nr.K3\ntype(r.K3)\n\n\n\n7.2.4 Python → R\n\nShow the codeimport pandas as pd\nm = [1, 2, 3]\nn = pd.DataFrame([[1, 2], [3, 4]], columns=[\"a\", \"b\"])\n\nA = 1\nB = [1, 2, 3]\nC = [[1, 2], [3, 4]]\nD1 = [[1], 2, 3]\nD2 = [[1, 2], 2, 3]\n\nE = (1, 2, 3)\n\nFF = ((1, 2), (3, 4))\n\nG = ((1, 2), 3, 4)\n\nH = {\"a\": [1, 2, 3],  \"b\": [2, 3, 4]}\n     \nI = {\"a\": 1,\"b\": [2, 3, 4]}\n     \ndef J(a, b):\n  return a + b\n\n\n\nShow the codepy$m\npy$n\n\n### integer\npy$A\nclass(py$A)\n\npy$B\nclass(py$B)\n\n### list\npy$C\nclass(py$C)\n\npy$D1\nclass(py$D1)\n\npy$D2\nclass(py$D2)\n\npy$E\nclass(py$E)\n\npy$FF\nclass(py$FF)\n\npy$G\nclass(py$G)\n\npy$H\nclass(py$H)\n\npy$I\nclass(py$I)\n\n### function\npy$J\nclass(py$J)\npy$J(2, 3)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Python to R</span>"
    ]
  }
]